<?php
namespace backend\controllers;

use backend\models\Bike;
use backend\models\Hongbao;
use backend\models\Member;
use backend\models\RedPacket;
use backend\models\RedPacketList;
use backend\models\RepairRecords;
use backend\models\RidingRecord;
use Yii;
use yii\helpers\Json;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;

class RedController extends Controller
{
    

    /**
     * Displays homepage.
     *
     * @return string
     */
    public $layout=false;
    public $enableCsrfValidation = false;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        header("Access-Control-Allow-Origin: *");
        header("Access-Control-Allow-Credentials: true");
        header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
        header("Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With");
        header('P3P: CP="CAO PSA OUR"'); // Makes IE to support cookies
        header("Content-Type: application/json; charset=utf-8");
    }

    public function actionIndex()
    {
        $member= Member::findOne(1);
        return Json::encode($member);
    }

    public function actionBikelist(){
        $bikes = Bike::find()->asArray()->all();
        $data['lists'] = $bikes;
        $data['count'] = count($bikes);
        return Json::encode($data);
    }

    public function actionQiang(){
        $redis=new \Redis();
        $redis->connect('127.0.0.1', 6379);
        //检测是否连接成功
        //echo "Server is running: " . $redis->ping();
        $user_id=Yii::$app->request->post('member_id',34535);
        $packet_id =Yii::$app->request->post('packet_id',5);
        if(empty($user_id) || empty($packet_id)){
            return Json::encode(['type'=>4,'mes'=>'缺少参数','name'=>'xiaojie']);
        }
        if($redis->hExists("red:draw:".$packet_id,$user_id)){
            return Json::encode(['type'=>4,'mes'=>'抢过了','name'=>'xiaojie']);
        }
        if($redis->lLen("red:list:".$packet_id)==0){
            return Json::encode(['type'=>4,'mes'=>'抢光了','name'=>'xiaojie']);
        }
        $a=$redis->rPop("red:list:".$packet_id);

        $redis->hSet("red:draw:".$packet_id,$user_id,$a);
        $red=new RedPacket();
        $red->amount=$a;
        $red->member_id=$user_id;
        $red->packet_id=$packet_id;
        if(!$red->save(false)){
            return Json::encode(['type'=>4,'mes'=>$red->getFirstError(),'name'=>'xiaojie']);
        };
        $member = Member::findOne(1);
        $member->money+=$a;
        if(!$member->save(false)){
            return Json::encode(['type'=>4,'mes'=>$red->getFirstError(),'name'=>'xiaojie']);
        };
        return Json::encode(['type'=>4,'mes'=>"抢到{$a}元",'name'=>'xiaojie']);
    }

    public function actionRedlist(){

        $a=RedPacketList::find()->asArray()->all();
        return Json::encode($a);
       /* $redis=new \Redis();
        $packet_id=5;
        $redis->connect('127.0.0.1', 6379);
        print_r($redis->lRange("red:list:".$packet_id,0,-1));*/
    }

    public function actionReddetail(){
        $data=file_get_contents('php://input');
        $data=Json::decode($data);
        $redis=new \Redis();
        $packet_id=$data['id'];
        $redis->connect('127.0.0.1', 6379);
        $list = $redis->lRange("red:list:".$packet_id,0,-1);
        $res['data'] =$list;
        $res['count']=count($list);
        return Json::encode($res);
    }


    /**
     * 后台管理界面
     * @return type
     */
    public function actionFa() {

        // 例子
        //header("Content-type:text/html;charset=utf-8");
        $coupon = new Hongbao(100, 10, 0.01);
        $res = $coupon->handle();
        $redis=new \Redis();
        $redis->connect('127.0.0.1', 6379);
        $red=new RedPacketList();
        $red->name = 'test';
        if(!$red->save(false)){
            print_r($red->getErrors());
        }

        //检测是否连接成功
        //echo "Server is running: " . $redis->ping();
        // 输出结果 Server is running: +PONG
        $red_id = $red->id;
        foreach ($res['items'] as $v){
            $redis->lPush("red:list:".$red_id,$v);
        }
        //echo '红包id：'.$red_id;
        //echo '<pre>';
        //print_r($res);exit;

        return Json::encode(['type'=>2,'mes'=>'test','name'=>'xiaojie','id'=>$red->id]);


    }
}
