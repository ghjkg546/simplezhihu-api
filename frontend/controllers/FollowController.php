<?php
namespace frontend\controllers;

use general\components\JwtTool;
use general\models\Member;
use general\models\ZhihuQuestion;
use general\models\ZhihuQuestionFollow;
use Yii;
use yii\helpers\Json;
use yii\web\Controller;

/**
 * 关注控制器
 */
class FollowController extends Controller
{


    /**
     * Displays homepage.
     *
     * @return string
     */
    public $layout = false;
    public $enableCsrfValidation = false;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }


    /**
     * 获取用户关注问题
     * @return string
     */
    public function actionGetFollowAnswer()
    {
        $follow_ids = ZhihuQuestionFollow::find()->where(['user_id' => JwtTool::getUserId()])->select(['question_id'])->column();
        $questions = ZhihuQuestion::find()->where(['id' => $follow_ids])->asArray()->all();
        $authors = Member::find()->select(['username'])->indexBy('id')->column();
        foreach ($questions as $k => $v) {
            $questions[$k]['author_name'] = $authors[$v['author_id']];
            $questions[$k]['up_count'] = empty($v['up_count']) ? 0 : $v['up_count'];
        }
        return Json::encode(['code' => 0, 'data' => $questions]);
    }

    /**
     * 取消关注回答
     * @return string
     */
    public function actionCancelFollowAnswer()
    {
        $data = file_get_contents('php://input');
        $data = Json::decode($data);
        ZhihuQuestionFollow::deleteAll(['user_id' => JwtTool::getUserId(), 'question_id' => $data['id']]);
        $follow_ids = ZhihuQuestionFollow::find()->where(['user_id' => JwtTool::getUserId()])->select(['question_id'])->column();
        $questions = ZhihuQuestion::find()->where(['id' => $follow_ids])->asArray()->all();
        $authors = Member::find()->select(['username'])->indexBy('id')->column();
        foreach ($questions as $k => $v) {
            $questions[$k]['author_name'] = $authors[$v['author_id']];
            $questions[$k]['up_count'] = empty($v['up_count']) ? 0 : $v['up_count'];
        }
        return Json::encode(['code' => 0, 'data' => $questions]);
    }


}
